
plugins {
    id "com.peterabeles.gversion" version "1.7.0"
}

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'osgi'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'org.ddogleg'
version = '0.18-SNAPSHOT'
project.archivesBaseName = 'ddogleg'

sourceCompatibility = 1.8
targetCompatibility = 1.8

gversion {
    srcDir       = "src"
    classPackage = "org.ddogleg"
    className    = "DDoglegVersion"
}

repositories {
    mavenCentral()
    mavenLocal()

    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
}

sourceSets {

    benchmark {
        java {
            srcDir 'benchmark/src'
        }
        resources {
            srcDir 'benchmark/resources'
        }
    }

    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources/src'
        }
    }

    test {
        java {
            srcDir 'examples/src'
            srcDir 'test'
            srcDir 'generate'
            srcDir 'benchmark/test'
        }
        resources {
            srcDir 'resources/test'
        }
    }

}

dependencies {
    ['ejml-core','ejml-fdense','ejml-ddense','ejml-simple','ejml-dsparse'].each { String a ->
        compile group: 'org.ejml', name: a, version: '0.39-SNAPSHOT'}

    compile 'com.google.code.findbugs:jsr305:3.0.2' // @Nullable

    testImplementation( 'org.junit.jupiter:junit-jupiter-api:5.4.0')
    testRuntimeOnly( 'org.junit.jupiter:junit-jupiter-engine:5.4.0')

    testCompile project.sourceSets.benchmark.output

    benchmarkCompile project.sourceSets.main.output
    benchmarkCompile project.sourceSets.main.runtimeClasspath
    benchmarkCompile project.sourceSets.main.compileClasspath
}

javadoc {
    configure(options) {
        links = [ 'http://docs.oracle.com/javase/8/docs/api/',
                  'http://ejml.org/javadoc/']
        failOnError = false
    }
}

jar {
    manifest { // the manifest of the default jar is of type OsgiManifest
        instruction 'Bundle-Vendor', 'DDogleg'
        instruction 'Bundle-DocURL', 'http://ddogleg.org'
    }
}

test {
    ignoreFailures true
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

// Creates Java 8 byte code on Java 9+
if(JavaVersion.current() != JavaVersion.VERSION_1_8) {
    compileJava {
        options.compilerArgs = ["--release", "8"]
    }
}

// if Maven central isn't setup in gradle.properties skip all of this
if( project.hasProperty('ossrhUsername') ) {
    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'DDogleg'
                    packaging 'pom'
                    // optionally artifactId can be defined here
                    description 'DDogleg Numerics is a high performance Java library for non-linear optimization, robust model fitting, polynomial root finding, sorting, and more.'
                    url 'http://ddogleg.org'

                    scm {
                        connection 'scm:git:git@github.com:lessthanoptimal/ddogleg.git'
                        developerConnection 'scm:git:git@github.com:lessthanoptimal/ddogleg.git'
                        url 'https://github.com/lessthanoptimal/ddogleg'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'pabeles'
                            name 'Peter Abeles'
                            email 'peter.abeles@gmail.com'
                        }
                    }
                }
            }
        }
    }
}

// Creates a directory with all the compiled jars and the dependencies
task createLibraryDirectory( dependsOn: ['jar','sourcesJar'] ) {
    doLast {
        ext.listExternal = files(project.configurations.compile)
        ext.listInternal = files(project.tasks.jar.archivePath)
        ext.listSource = files(project.tasks.sourcesJar.archivePath)

        ext.listExternal = ext.listExternal - ext.listInternal

        file('libraries').deleteDir()
        file('libraries').mkdir()

        copy {
            from ext.listExternal
            into 'libraries'
        }

        copy {
            from ext.listInternal
            from ext.listSource
            into 'libraries'
        }
    }
}

task alljavadoc(type: Javadoc) {
    // only include source code in src directory to avoid including 3rd party code which some projects do as a hack
    source = project.fileTree('src').include('**/*.java')
    classpath = project.sourceSets.main.compileClasspath

    destinationDir = file("${buildDir}/docs/javadoc")

    // Hack for Java 8u121 and beyond. Comment out if running an earlier version of Java
    options.addBooleanOption("-allow-script-in-comments", true)
    configure(options) {
        failOnError = false
        docTitle = "DDogleg ($project.version)"
        links = [ 'http://docs.oracle.com/javase/8/docs/api/',
                  'http://ejml.org/javadoc/' ]
        bottom = file('misc/bottom.txt').text
    }
}

project.compileJava.dependsOn(createVersionFile)

wrapper {
    distributionType = Wrapper.DistributionType.BIN
    gradleVersion = '5.6.4'
}
